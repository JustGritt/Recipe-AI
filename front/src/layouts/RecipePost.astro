---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import FormattedDate from '@components/FormattedDate.astro';
import Chat from '@components/Chat.astro';

type Props = CollectionEntry<'recipe'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />

	</head>

	<body>
		<Header />
		<main class="bg-white dark:bg-gray-800 relative w-full min-h-[calc(100vh-310px)] text-black dark:text-white">
			<article class="text-black dark:text-white">
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>

			<!-- Reco -->


			<Chat />
		</main>
		<Footer />
	</body>
</html>

<style lang="scss" scoped>
	.hero-image {
		width: 100%;
		img {
			display: block;
			margin: 0 auto;
			border-radius: 12px;
			box-shadow: var(--box-shadow);
		}
	}
	.prose {
		width: 720px;
		max-width: calc(100% - 2em);
		margin: auto;
		padding: 1em;
		/* color: rgb(var(--gray-dark)); */
	}
	.title {
		margin-bottom: 1em;
		padding: 1em 0;
		text-align: center;
		line-height: 1;
		h1 {
			margin: 0 0 0.5em 0;
		}
	}
	.date {
		margin-bottom: 0.5em;
		/* color: rgb(var(--gray)); */
	}
	.last-updated-on {
		font-style: italic;
	}
</style>