---
import HeaderLink from './HeaderLink.astro';
import DarkModeToggle from './DarkModeToggle.astro';
import { SITE_TITLE } from '@consts';
---

<header class="relative w-full m-0 px-4 py-0 bg-white text-black dark:bg-gray-800 dark:text-white h-20">
	<nav class="flex justify-end items-center h-20 lg:justify-between">
		<h2 class="hidden text-base m-0 p-2 rounded-sm text-white bg-slate-950 dark:bg-slate-800 dark:text-white h-10 items-center justify-center overflow-hidden lg:flex">
			<a href="/" class="text-white no-underline border-md p-4">{SITE_TITLE}</a>
		</h2>
		<div class="internal-links">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/recipe">Recipe</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>


		<div id="side-links" class="flex max-[720px]:hidden">
			<!-- Menu -->
			<DarkModeToggle />
		</div>

	</nav>
</header>

<script>
	const createLoggedInMenu = () => {
		const dashboardLink = document.createElement('a');
		dashboardLink.href = '/dashboard';
		dashboardLink.classList.add('link');
		dashboardLink.textContent = 'Dashboard';

		const logoutLink = document.createElement('a');
		logoutLink.href = '/logout';
		logoutLink.classList.add('header-link');
		logoutLink.textContent = 'Logout';

		sideLinks.appendChild(logoutLink);
		sideLinks.appendChild(dashboardLink);
	}

	const createLoggedOffMenu = () => {
		const registerLink = document.createElement('a');
		registerLink.href = '/register';
		registerLink.classList.add('a');
		registerLink.textContent = 'Register';

		const loginLink = document.createElement('a');
		loginLink.href = '/login';
		loginLink.classList.add('a');
		loginLink.textContent = 'Login';

		sideLinks.appendChild(registerLink);
		sideLinks.appendChild(loginLink);
	}

	const token = localStorage.getItem('jwt') || null;
	const sideLinks = document.getElementById('side-links') as HTMLDivElement;
	if (token) {
		const req = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/verify`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${import.meta.env.PUBLIC_OPENAI}`
			},
			body: JSON.stringify({ token }),
		});
		await req.json().then((res) => {
			if (res.status === 'success') {
				createLoggedInMenu();
			} else {
				createLoggedOffMenu();
			}
		})
	} else {
		createLoggedOffMenu();
	}
</script>

<style lang="scss" scoped>
	.links {

		&-internal {

		}

		&-side {

		}
	}
</style>
