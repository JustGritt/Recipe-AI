---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '@consts';
---

<header class="relative w-full m-0 px-4 py-0 bg-white text-black dark:bg-gray-800 dark:text-white">
	<nav class="flex justify-between items-center">
		<h2 class="text-base m-0 p-2 rounded-sm text-white bg-slate-950 dark:bg-slate-800 dark:text-white">
			<a href="/" class="p-0 no-underline">{SITE_TITLE}</a>
		</h2>

		<div class="internal-links">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/recipe">Recipe</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>

		<div id="side-links" class="flex max-[720px]:hidden">
			<!-- Menu -->
		</div>
	</nav>
</header>

<script>
	const createLoggedInMenu = () => {
		const dashboardLink = document.createElement('a');
		dashboardLink.href = '/dashboard';
		dashboardLink.classList.add('header-link');
		dashboardLink.textContent = 'Dashboard';
		sideLinks.appendChild(dashboardLink);

		const logoutLink = document.createElement('a');
		logoutLink.href = '/logout';
		logoutLink.classList.add('header-link');
		logoutLink.textContent = 'Logout';
		sideLinks.appendChild(logoutLink);
	}

	const createLoggedOffMenu = () => {
		const registerLink = document.createElement('a');
		registerLink.href = '/register';
		registerLink.classList.add('header-link');
		registerLink.textContent = 'Register';
		sideLinks.appendChild(registerLink);

		const loginLink = document.createElement('a');
		loginLink.href = '/login';
		loginLink.classList.add('header-link');
		loginLink.textContent = 'Login';
		sideLinks.appendChild(loginLink);
	}

	const token = localStorage.getItem('jwt') || null;
	const sideLinks = document.getElementById('side-links') as HTMLDivElement;
	if (token) {
		const req = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/verify`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${import.meta.env.PUBLIC_OPENAI}`
			},
			body: JSON.stringify({ token }),
		});
		await req.json().then((res) => {
			if (res.status === 'success') {
				createLoggedInMenu();
			} else {
				createLoggedOffMenu();
			}
		})
	} else {
		createLoggedOffMenu();
	}
</script>

<style lang="scss" scoped>
	.internal-links {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		> a {
			height: 60px;
		}
	}

	a {
		padding: 1rem;
		color: var(--black);
		border-bottom: 4px solid transparent;
		text-decoration: none;
		margin: 0 4px;
		&.active {
			text-decoration: none;
			border-bottom-color: var(--accent);
		}
	}

	#side-links {
		> a {
			margin: 0 4px;
		}
	}
</style>
