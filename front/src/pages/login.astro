---
import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import Chat from '@components/Chat.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>
    <body class="min-h-screen flex flex-col">
        <Header title={SITE_TITLE} />
        <main id="home" class="flex-grow w-full bg-white transition-all duration-300 ease-in-out m-0 max-w-full py-20">
            <section class="w-full max-w-md m-auto mt-20">
                <div class="bg-white rounded-lg border-2 border-slate-600 p-8 space-y-6 ">
                    <h1 class="text-2xl font-bold tracking-tight text-slate-900 text-center">
                        Login to your account
                    </h1>
                    <form id="login-form" class="space-y-6" action="POST">
                        <div>
                            <label for="email" class="block mb-2 text-sm font-medium text-gray-900">
                                Your email
                            </label>
                            <input type="email" name="email" id="email"
                                class="bg-gray-50 border border-gray-300 text-slate-900 text-sm rounded-lg block w-full p-2.5 focus:ring-slate-500 focus:border-slate-500"
                                placeholder="john@doe.com" required />
                        </div>
                        <div>
                            <label for="password" class="block mb-2 text-sm font-medium text-slate-900">
                                Password
                            </label>
                            <input type="password" name="password" id="password" placeholder="••••••••"
                                class="bg-gray-50 border border-gray-300 text-slate-900 text-sm rounded-lg block w-full p-2.5 focus:ring-slate-500 focus:border-slate-500"
                                required />
                        </div>
                        <div class="flex items-center">
                            <input id="remember" type="checkbox"
                                class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-gray-300" />
                            <label for="remember" class="ml-3 text-sm font-light text-gray-500">
                                Remember me
                            </label>
                        </div>
                        <button type="submit"
                            class="w-full text-white bg-black hover:bg-slate-500 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                            Login
                        </button>
                        <p class="text-sm font-light text-gray-500 text-center">
                            You don't have an account yet?
                            <a href="/register" class="font-medium text-blue-600 hover:underline hover:text-blue-400">
                                Register here
                            </a>
                        </p>
                    </form>
                </div>
                <Chat />
            </section>
        </main>
        <Footer />
    </body>
</html>

<script>
    const loginForm = document.getElementById('login-form') as HTMLFormElement;
    const submitButton = loginForm.querySelector('button[type="submit"]') as HTMLButtonElement;
    const passwordField = loginForm.querySelector('input[name="password"]') as HTMLInputElement;

    loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        submitButton.disabled = true;

        const formData = {
            email: loginForm.email.value,
            password: passwordField.value,
        };

        try {
            const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/login`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData),
            });

            if (response.ok) {
                const jwt = await response.json();
                localStorage.setItem('jwt', jwt.token);
                window.location.href = '/dashboard';
            } else {
                const responseData = await response.json();
                alert(responseData.message);
            }
        } catch (error) {
            console.error(error);
            alert('An error occurred while logging in.');
        } finally {
            submitButton.disabled = false;
            passwordField.value = '';
        }
    });
</script>