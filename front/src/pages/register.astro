---
import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import Chat from '@components/Chat.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import SuccessNotification from '@components/SuccessNotification.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header title={SITE_TITLE} - Register />
		<main class="bg-white dark:bg-gray-800 w-full relative min-h-[calc(100vh-310px)]">

			<SuccessNotification id="notification" />

			<div class="flex flex-col items-center justify-center px-6 py-8 mx-auto lg:py-0">
				<div class="w-full bg-white rounded-lg md:mt-0 lg:max-w-lg sm:max-w-md xl:p-0 dark:bg-slate-600 shadow-md border border-gray-200 dark:border-gray-700">
					<div class="p-6 space-y-4 md:space-y-6 sm:p-8">
						<h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
							Create a RecipeAI account
						</h1>

						<form id="registration-form" class="space-y-4 md:space-y-6" action="POST">
							<div>
								<label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
								<input type="text" name="username" id="username" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-600 focus:border-gray-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Johnoe" required="" >
							</div>
							<div>
								<label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email address</label>
								<input type="email" name="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-600 focus:border-gray-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john@doe.com" required="">
							</div>
							<div>
								<label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
								<input type="password" name="password" id="password" placeholder="••••••••" minlength="8" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-600 focus:border-gray-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required="">
							</div>
							<div>
								<label for="confirm-password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Confirm password</label>
								<input type="password" name="confirm-password" id="confirm-password" placeholder="••••••••" minlength="8" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-600 focus:border-gray-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required="">
							</div>
							<div class="flex items-start">
								<div class="flex items-center h-5">
									<input id="terms" aria-describedby="terms" type="checkbox" class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-gray-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-gray-600 dark:ring-offset-gray-800" required="">
								</div>
								<div class="ml-3 text-sm">
									<label for="terms" class="font-light text-gray-500 dark:text-gray-300">I accept the
										<a class="font-medium text-blue-600 dark:text-blue-400 hover:underline hover:text-blue-400" href="/terms" target="_blank">
											Terms and Conditions
										</a>
									</label>
								</div>
							</div>
							<button type="submit" class="w-full text-white bg-gray-700 hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-gray-700 dark:hover:bg-gray-800 dark:focus:ring-gray-800">Create an account</button>

							<p class="text-sm font-light text-gray-500 dark:text-gray-400">
								Already have an account?
								<a href="/login" class="font-medium text-blue-600 hover:underline dark:text-blue-400 hover:text-blue-400">
									Login here
								</a>
							</p>
						</form>
					</div>
				</div>
			</div>

			<Chat />
		</main>
		<Footer />
	</body>
</html>

<script>
	const registrationForm = document.getElementById('registration-form') as HTMLFormElement;

	registrationForm.addEventListener('submit', async (e) => {
		e.preventDefault();

		const password = (document.getElementById('password') as HTMLInputElement).value;
		const confirmPassword = (document.getElementById('confirm-password') as HTMLInputElement).value;
		if (password !== confirmPassword) {
			alert('Passwords do not match');
			return;
		}

		const formData = {
			username: (document.getElementById('username') as HTMLInputElement).value,
			email: (document.getElementById('email') as HTMLInputElement).value,
			password,
		};

		console.log(formData);

		try {
			const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/register`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(formData),
			});

			if (response.ok) {
				const notification = document.getElementById('notification') as HTMLDivElement;
				notification.classList.remove('hidden');
				notification.classList.add('flex');

				setTimeout(() => {
					console.log('Redirecting to login page');
					window.location.href = '/login';
				}, 2000);
			} else {
				const responseData = await response.json();
				alert(responseData.message);
			}
		} catch (error) {
			console.error(error);
			alert('An error occurred while registering. Please try again later.');
		}
	});

	const notificationCloseButton = document.getElementById('notification-close') as HTMLButtonElement;
	notificationCloseButton.addEventListener('click', () => {
		const notification = document.getElementById('notification') as HTMLDivElement;
		notification.classList.add('hidden');
	});
</script>
